using EnvDTE;
using Microsoft.Data.Entity.Design.Extensibility;
using System;
using System.ComponentModel.Composition;
using System.Linq;
using System.Windows.Forms;
using System.Xml.Linq;

namespace XperiAndri.AspNetIdentity.EFDesignerExtension
{
    [PartCreationPolicy(CreationPolicy.Shared)]
    [Export(typeof(IModelGenerationExtension))]
    class ModelGenerationExtension : IModelGenerationExtension
    {

        /* This callbacks only appears to be called by the Update Wizard*/

        /// <summary>
        /// Called when the selected object in the Entity Data Model Designer changes
        /// and matches the specified EntityDesignerExtendedProperty attribute.
        /// </summary>
        /// <param name="context">Provides file and Visual Studio project information.</param>
        void IModelGenerationExtension.OnAfterModelGenerated(ModelGenerationExtensionContext context)
        {
            //
            // context.CurrentDocument = The XDocument that will be saved. An extension can modify this document. 
            //                           Note that the document may have been modified by another extension's 
            //                           implementation of OnAfterModelGenerated().
            //
            // context.GeneratedDocument = The original XDocument that was generated Entity Data Model Wizard or 
            //                             the Update Model Wizard. An extension cannot modify this document.
            //
            // context.Project = The EnvDTE.Project that contains the .edmx file
            //
            // context.WizardKind = The wizard that initiated the .edmx file generation or update process. 
            //                      Possible values are WizardKind.Generate or WizardKind.UpdateModel.
            //

        }

        /// <summary>
        /// Called after a model is updated by the Update Model Wizard.
        /// </summary>
        /// <param name="context">Provides file information and Visual Studio project information.</param>
        void IModelGenerationExtension.OnAfterModelUpdated(UpdateModelExtensionContext context)
        {
            //
            // context.OriginalDocument = The original XDocument before the Update Model Wizard started.
            //                            An extension cannot modify this document.
            //
            // context.GeneratedDocument = The XDocument that was generated by the Update Model wizard.
            //                             An extension cannot modify this document.
            //
            // context.UpdateModelDocument = The contents of context.OriginalDocument merged with the
            // contents of context.GeneratedDocument. An extension cannot modify this document.
            //
            // context.CurrentDocument = The XDocument that will be saved. An extension can modify this
            // document. Note that the document may have been modified by another extension's implementation
            // of OnAfterModelGenerated().
            //
            //
            // context.ProjectItem = The EnvDTE.ProjectItem of current .edmx file.
            //
            // context.Project = The EnvDTE.Project that contains the .edmx file.
            //
            // context.WizardKind = The wizard that initiated the .edmx file generation or update process.
            //                      Possible values are WizardKind.Generate or WizardKind.UpdateModel.
            //


        }
    }
}